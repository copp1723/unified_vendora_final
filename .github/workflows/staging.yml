name: Deploy to Staging

on:
  push:
    branches: [ "staging" ]
  workflow_dispatch:

env:
  PROJECT_ID: vendora-464403
  SERVICE_NAME: vendora-api-staging
  REGION: us-central1

permissions:
  contents: read
  id-token: write

jobs:
  test-build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout source
        uses: actions/checkout@v4

      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: üß∞ Install dependencies & run tests
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pytest -q

      - name: üîê Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}"

      - name: ‚òÅÔ∏è Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: "${{ env.PROJECT_ID }}"
          install_components: 'beta'

      - name: üèóÔ∏è Build & Push container image
        id: build
        run: |
          SHORT_SHA=${GITHUB_SHA::7}
          IMAGE_URI=gcr.io/${PROJECT_ID}/${SERVICE_NAME}:$SHORT_SHA
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
          gcloud builds submit --tag $IMAGE_URI -f working_vendora/docker/Dockerfile .

      - name: üöÄ Deploy to Cloud Run (staging)
        run: |
          gcloud run deploy ${SERVICE_NAME} \
            --image ${IMAGE_URI} \
            --region ${REGION} \
            --platform managed \
            --allow-unauthenticated \
            --quiet \
            --port 8000 \
            --set-env-vars ENVIRONMENT=staging,PORT=8000

      - name: üîç Smoke test deployed service
        run: |
          SERVICE_URL=$(gcloud run services describe ${SERVICE_NAME} --region=${REGION} --format='value(status.url)')
          echo "Staging service URL: $SERVICE_URL"
          curl --retry 5 --retry-connrefused --retry-delay 5 -f "$SERVICE_URL/health"